{% extends "layout.jinja2" %}

{% block content %}
    <div class="row">
        <div class="col-lg-12">
            <h3>Realtime Day/Night map <small class="pull-right" id="curDate"></small></h3>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div id="map" style="width: 1024px; height: 400px"></div>
        </div>
    </div>
{% endblock %}

{% block scripts %}
    <script src="{{ url_for('static', filename='js/leaflet.js') }}"></script>
    <script src="{{ url_for('static', filename='js/leaflet-providers.js') }}"></script>
    <script src="{{ url_for('static', filename='js/leaflet.ajax.min.js') }}"></script>
    <script src="{{ url_for('static', filename='js/leaflet.awesome-markers.js') }}"></script>
    <script src="{{ url_for('static', filename='js/L.Terminator.js') }}"></script>

    <script>
        var map = L.map('map').setView([52, 4], 2);
        map.addLayer(L.tileLayer.provider('OpenStreetMap.Mapnik'));

        function popUp(f,l){
            var out = [];
            if (f.properties) {
                if (f.properties['own']) {
                    l.bindPopup("<div class='popupMap'>This user: " + f.properties['callsign'] + "</div>")
                } else {
                    var string = "Callsign: " + f.properties['callsign'];
                    string += "<br />Date: " + f.properties['date'];
                    string += "<br />Band: " + f.properties['band'];
                    string += "<br />Mode: " + f.properties['mode'];
                    string += "<br />Submode: " + f.properties['submode'];
                    l.bindPopup("<div class='popupMap'>" + string + '</div>');
                }

                if (f.properties['icon'] == 'home') {
                    l.setIcon(homeIcon);
                } else if (f.properties['icon'] == 'qso') {
                    l.setIcon(qsoIcon);
                } else {
                    l.setIcon(defaultIcon);
                }
            }
        }

        var defaultIcon = L.AwesomeMarkers.icon({
            icon: 'star',
            markerColor: 'blue'
        });
        var qsoIcon = L.AwesomeMarkers.icon({
            icon: 'user',
            markerColor: 'blue'
        });
        var homeIcon = L.AwesomeMarkers.icon({
            icon: 'home',
            markerColor: 'green'
        });

        var t = L.terminator();
        t.addTo(map);

        setInterval(function(){updateTerminator(t)}, 1000);

        function updateTerminator(t) {
            var t2 = L.terminator();
            t.setLatLngs(t2.getLatLngs());
            t.redraw();
            $("#curDate").html(Date());
        }
    </script>
{% endblock %}
{% block styles %}
    <link rel="stylesheet" href="{{ url_for('static', filename='css/leaflet.css') }}" />
    <link rel="stylesheet" href="{{ url_for('static', filename='css/leaflet.awesome-markers.css') }}" />
{% endblock %}