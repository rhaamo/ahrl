clone:
  git:
    image: plugins/git:1
    depth: 50
    tags: true

pipeline:
  restore-cache:
      image: drillster/drone-volume-cache
      restore: true
      mount:
          - .cache
      volumes:
          - /tmp/cache:/cache

  build:
    image: python:3-alpine
    commands:
      - apk -U add gcc g++ make pkgconfig git postgresql-dev libffi libffi-dev python3-dev
      - pip install --upgrade pip setuptools
      - pip install --cache-dir=/cache flake8
      - pip install --cache-dir=/cache black
      - pip install --cache-dir=/cache cython
      - pip install --cache-dir=/cache -r requirements.txt
      - python setup.py install
      - black --check .
      - flake8 .
      - cp tests/config_tests.py config.py
      - python setup.py test

  migrations:
    image: python:3-alpine
    commands:
      - apk -U add gcc g++ make pkgconfig git postgresql-dev libffi libffi-dev python3-dev postgresql-client
      - pip install --upgrade pip setuptools
      - pip install --cache-dir=/cache flake8
      - pip install --cache-dir=/cache black
      - pip install --cache-dir=/cache cython
      - pip install --cache-dir=/cache -r requirements.txt
      - python setup.py install
      - psql -U postgres -h database -w -c 'CREATE DATABASE ahrl'
      - cp config.py.sample config.py
      - flask db upgrade

  rebuild-cache:
      image: drillster/drone-volume-cache
      rebuild: true
      mount:
          - .cache
      volumes:
          - /tmp/cache:/cache

  notify:
    image: plugins/slack
    channel: gitea
    secrets:
      - SLACK_WEBHOOK
    when:
      event: [ push, tag ]
      status: [ changed, failure, success ]

services:
  database:
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_DB=ahrl_test

